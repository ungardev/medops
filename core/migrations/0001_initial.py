# Generated by Django 5.2.7 on 2025-10-26 03:00

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import simple_history.models
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_date', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('arrived', 'Arrived'), ('in_consultation', 'In Consultation'), ('completed', 'Completed'), ('canceled', 'Canceled')], default='pending', max_length=20)),
                ('arrival_time', models.TimeField(blank=True, null=True)),
                ('appointment_type', models.CharField(choices=[('general', 'Consulta General'), ('specialized', 'Consulta Especializada')], default='general', max_length=20, verbose_name='Tipo de consulta')),
                ('expected_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Monto esperado')),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Appointment',
                'verbose_name_plural': 'Appointments',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('actor', models.CharField(blank=True, max_length=100, null=True)),
                ('entity', models.CharField(max_length=50)),
                ('entity_id', models.IntegerField()),
                ('action', models.CharField(max_length=100)),
                ('metadata', models.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.CreateModel(
            name='GeneticPredisposition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Genetic Predisposition',
                'verbose_name_plural': 'Genetic Predispositions',
            },
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnoses', to='core.appointment')),
            ],
            options={
                'verbose_name': 'Diagnosis',
                'verbose_name_plural': 'Diagnoses',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPatient',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('national_id', models.CharField(blank=True, db_index=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='La cédula solo puede contener números.', regex='^\\d+$'), django.core.validators.MinLengthValidator(6, message='La cédula debe tener al menos 6 dígitos.'), django.core.validators.MaxLengthValidator(10, message='La cédula no puede tener más de 10 dígitos.')], verbose_name='Cédula de Identidad')),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100)),
                ('second_last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('Unknown', 'Unknown')], default='Unknown', max_length=10)),
                ('contact_info', models.TextField(blank=True, null=True)),
                ('email', models.EmailField(default='example@example.com', max_length=255, verbose_name='Correo electrónico')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Dirección')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('blood_type', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3, null=True)),
                ('allergies', models.TextField(blank=True, null=True)),
                ('medical_history', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('active', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Patient',
                'verbose_name_plural': 'historical Patients',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPayment',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('method', models.CharField(choices=[('cash', 'Efectivo'), ('card', 'Tarjeta'), ('transfer', 'Transferencia')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('paid', 'Pagado'), ('canceled', 'Cancelado'), ('waived', 'Exonerado')], default='pending', max_length=20)),
                ('reference_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Número de referencia / comprobante')),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Banco emisor (si aplica)')),
                ('received_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='Recibido por')),
                ('received_at', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Fecha de registro')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('appointment', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.appointment')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Payment',
                'verbose_name_plural': 'historical Payments',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('national_id', models.CharField(blank=True, max_length=10, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='La cédula solo puede contener números.', regex='^\\d+$'), django.core.validators.MinLengthValidator(6, message='La cédula debe tener al menos 6 dígitos.'), django.core.validators.MaxLengthValidator(10, message='La cédula no puede tener más de 10 dígitos.')], verbose_name='Cédula de Identidad')),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100)),
                ('second_last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('Unknown', 'Unknown')], default='Unknown', max_length=10)),
                ('contact_info', models.TextField(blank=True, null=True)),
                ('email', models.EmailField(default='example@example.com', max_length=255, verbose_name='Correo electrónico')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Dirección')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('blood_type', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3, null=True)),
                ('allergies', models.TextField(blank=True, null=True)),
                ('medical_history', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('genetic_predispositions', models.ManyToManyField(blank=True, related_name='patients', to='core.geneticpredisposition')),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
            },
        ),
        migrations.CreateModel(
            name='MedicalDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='medical_documents/')),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('uploaded_by', models.CharField(blank=True, max_length=100, null=True)),
                ('appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documents', to='core.appointment')),
                ('diagnosis', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documents', to='core.diagnosis')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='core.patient')),
            ],
            options={
                'verbose_name': 'Medical Document',
                'verbose_name_plural': 'Medical Documents',
            },
        ),
        migrations.CreateModel(
            name='HistoricalAppointment',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('appointment_date', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('arrived', 'Arrived'), ('in_consultation', 'In Consultation'), ('completed', 'Completed'), ('canceled', 'Canceled')], default='pending', max_length=20)),
                ('arrival_time', models.TimeField(blank=True, null=True)),
                ('appointment_type', models.CharField(choices=[('general', 'Consulta General'), ('specialized', 'Consulta Especializada')], default='general', max_length=20, verbose_name='Tipo de consulta')),
                ('expected_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Monto esperado')),
                ('notes', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.patient')),
            ],
            options={
                'verbose_name': 'historical Appointment',
                'verbose_name_plural': 'historical Appointments',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='appointment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.patient'),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('method', models.CharField(choices=[('cash', 'Efectivo'), ('card', 'Tarjeta'), ('transfer', 'Transferencia')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('paid', 'Pagado'), ('canceled', 'Cancelado'), ('waived', 'Exonerado')], default='pending', max_length=20)),
                ('reference_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Número de referencia / comprobante')),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Banco emisor (si aplica)')),
                ('received_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='Recibido por')),
                ('received_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Fecha de registro')),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='core.appointment')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medication', models.CharField(max_length=200)),
                ('dosage', models.CharField(blank=True, max_length=200, null=True)),
                ('duration', models.CharField(blank=True, max_length=200, null=True)),
                ('diagnosis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='core.diagnosis')),
            ],
            options={
                'verbose_name': 'Prescription',
                'verbose_name_plural': 'Prescriptions',
            },
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan', models.TextField()),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('diagnosis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatments', to='core.diagnosis')),
            ],
            options={
                'verbose_name': 'Treatment',
                'verbose_name_plural': 'Treatments',
            },
        ),
        migrations.CreateModel(
            name='WaitingRoomEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arrival_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('waiting', 'Waiting'), ('in_consultation', 'In Consultation'), ('completed', 'Completed'), ('canceled', 'Canceled')], default='waiting', max_length=20)),
                ('priority', models.CharField(choices=[('scheduled', 'Scheduled'), ('walkin', 'Walk-in'), ('emergency', 'Emergency')], default='scheduled', max_length=20)),
                ('order', models.PositiveIntegerField(default=0)),
                ('appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.appointment')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.patient')),
            ],
            options={
                'verbose_name': 'Waiting Room Entry',
                'verbose_name_plural': 'Waiting Room Entries',
                'ordering': [models.Case(models.When(priority='emergency', then=0), models.When(priority='scheduled', then=1), models.When(priority='walkin', then=2), default=3, output_field=models.IntegerField()), 'order', 'arrival_time'],
            },
        ),
    ]
