"""
Django settings for medops project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# === Paths ===
BASE_DIR = Path(__file__).resolve().parent.parent

# === Entorno ===
# Selecciona .env seg칰n DJANGO_ENV (development o production)
ENVIRONMENT = os.environ.get("DJANGO_ENV", "development")
load_dotenv(BASE_DIR / f".env.{ENVIRONMENT}")

# === Seguridad ===
SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY", "inseguro-en-dev")
if SECRET_KEY == "inseguro-en-dev":
    raise ValueError("SECRET_KEY insegura: define DJANGO_SECRET_KEY en tu .env")

DEBUG = os.environ.get("DEBUG", "False") == "True"
ALLOWED_HOSTS = os.environ.get("ALLOWED_HOSTS", "").split(",")

# === Apps ===
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'core.apps.CoreConfig',
    "rangefilter",
    'simple_history',
    "corsheaders",
    "drf_spectacular",
    "drf_spectacular_sidecar"
]

# === Middleware ===
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'simple_history.middleware.HistoryRequestMiddleware'
]

# === DRF / API ===
REST_FRAMEWORK = {
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.SessionAuthentication",  # 游녣 login normal de Django
        "rest_framework.authentication.TokenAuthentication",    # 游녣 si usas tokens DRF
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticatedOrReadOnly",
    ],
}

SPECTACULAR_SETTINGS = {
    "TITLE": "MedOps API",
    "DESCRIPTION": "Documentaci칩n de la API de MedOps",
    "VERSION": "1.0.0",
    "SERVE_INCLUDE_SCHEMA": False,  # en prod puedes ocultar el schema si quieres
    "COMPONENT_SPLIT_REQUEST": True,
    "SCHEMA_PATH_PREFIX": r"/api",  # opcional, si quieres que organice todo bajo /api
    "SECURITY": [
        {"basicAuth": []},           # 游녣 login b치sico
        {"cookieAuth": []},          # 游녣 sesi칩n Django
        {"tokenAuth": []},           # 游녣 token DRF
    ],
}


# Seguridad extra (solo efectiva en producci칩n con HTTPS)
X_FRAME_OPTIONS = "DENY"
SECURE_BROWSER_XSS_FILTER = True
SESSION_COOKIE_SECURE = not DEBUG
CSRF_COOKIE_SECURE = not DEBUG
SECURE_SSL_REDIRECT = not DEBUG
SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")
SECURE_HSTS_SECONDS = 31536000 if not DEBUG else 0
SECURE_HSTS_INCLUDE_SUBDOMAINS = not DEBUG
SECURE_HSTS_PRELOAD = not DEBUG

ROOT_URLCONF = 'medops.urls'

# === Templates ===
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "core" / "templates"],  # 游녣 a침ade esta l칤nea
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'medops.wsgi.application'

# === Base de datos ===
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.environ.get("DB_NAME"),
        "USER": os.environ.get("DB_USER"),
        "PASSWORD": os.environ.get("DB_PASSWORD", "ClaveSegura123!"),
        "HOST": os.environ.get("DB_HOST", "localhost"),
        "PORT": os.environ.get("DB_PORT", "5432"),
    }
}

# === Validaci칩n de contrase침as ===
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# === Internacionalizaci칩n ===
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'America/Caracas'
USE_I18N = True
USE_TZ = True

# === Archivos est치ticos y media ===
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / "frontend" / "medops" / "dist" / "assets",
]
STATIC_ROOT = BASE_DIR / "staticfiles"

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / "media"

# === Primary key por defecto ===
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# === Logging b치sico ===
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "[{asctime}] {levelname} {name}: {message}",
            "style": "{",
        },
        "audit": {
            "format": "%(asctime)s [%(levelname)s] %(message)s",
        },
    },
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
            "formatter": "verbose",
        },
        "file": {
            "class": "logging.FileHandler",
            "filename": os.environ.get("DJANGO_LOG_FILE", BASE_DIR / "django.log"),
            "level": "WARNING",
            "formatter": "verbose",
        },
        # 游댳 Handler para auditor칤a
        "audit_file": {
            "class": "logging.FileHandler",
            "filename": BASE_DIR / "logs" / "audit.log",  # o /srv/medops/logs/audit.log
            "formatter": "audit",
            "encoding": "utf-8",
        },
    },
    "root": {
        "handlers": ["console", "file"],
        "level": "INFO",
    },
    "loggers": {
        "django.request": {
            "handlers": ["file"],
            "level": "ERROR",
            "propagate": False,
        },
        # 游댳 Logger para auditor칤a
        "audit": {
            "handlers": ["audit_file"],
            "level": "INFO",
            "propagate": False,
        },
        # 游댳 Logger espec칤fico para tu app core
        "core": {
            "handlers": ["console", "file"],
            "level": "DEBUG",   # as칤 ves mensajes detallados de AppointmentAdmin
            "propagate": False,
        },
    },
}

CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",
    "http://127.0.0.1:5173",
]

CORS_ALLOW_CREDENTIALS = True

CSRF_TRUSTED_ORIGINS = [
    "http://localhost:5173",
    "http://127.0.0.1:5173",
]
